# -*- coding: utf-8 -*-
"""task 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J8MVV9DWOCZ8-yyDqiIh469ZAGoCJNg1
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder
from sklearn.decomposition import PCA

df=pd.read_csv("/content/IRIS.csv")

df.head()

df.shape

df.info()

print(df.notnull())

df.describe()

import pandas as pd

# Creating a DataFrame
data = {'sepal_length': [5.1, 4.9, 4.7],
        'sepal_width': [3.5, 3.0, 3.2],
        'petal_length': [1.4, 1.4, 1.3],
        'petal_width': [0.2, 0.2, 0.2]}

df = pd.DataFrame(data)

# Find the name of the DataFrame using globals()
def find_variable_name(var):
    for name, obj in globals().items():
        if obj is var:
            return name
    return None

df_name = find_variable_name(df)

print(f"The name of the DataFrame is: {df_name}")

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import warnings

#set the style for seaborn
sns.set(style="whitegrid")

# Ignore the future warning about use_inf_as_na
with warnings.catch_warnings():
    warnings.simplefilter("ignore", FutureWarning)
    pd.set_option('mode.use_inf_as_na', False)

    # create sub plots for each numeric column
    fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(12, 8))

    # Flatten the axes array for easier indexing
    axes = axes.flatten()

    # List of neumeric column
    numeric_columns = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width']

    # Create histogram for each numeric column
    for i, column in enumerate(numeric_columns):
        sns.histplot(df[column], ax=axes[i], kde=True, bins=20, color='purple')
        axes[i].set_title(f'Distribution of {column}')

    # Adjust layout
    plt.tight_layout()
    plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# Create a scatter plot for 'sepal_length' vs 'sepal_width'
plt.figure(figsize=(6,6))
sns.scatterplot(x='sepal_length', y='sepal_width', data=df, s=100, color = 'red')
plt.title('Scatterplot : Sepal Length vs Sepal Width')
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.show()

# Plotting the distribution of petal length
plt.figure(figsize=(8, 6))
plt.hist(df['petal_length'], bins=10, color='orange', alpha=0.7, label='Petal Length')

# Plotting the distribution of petal width
plt.hist(df['petal_width'], bins=10, color='blue', alpha=0.7, label='Petal Width')

plt.title('Distribution of Petal Dimensions')
plt.xlabel('Petal Dimensions')
plt.ylabel('Frequency')
plt.legend()
plt.show()

import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt


data = {
    'sepal_length': [4.3, 7.9],
    'sepal_width': [2.0, 4.4],
    'petal_length': [1.0, 6.9],
    'petal_width': [0.1, 2.5]
}

df = pd.DataFrame(data)
# Create box plots for each numerical column
plt.figure(figsize=(12, 8))
sns.boxplot(data=df)
plt.title('Box Plots for Numerical Columns')
plt.show()

-